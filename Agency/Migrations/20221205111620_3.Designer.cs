// <auto-generated />
using System;
using Agency;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agency.Migrations
{
    [DbContext(typeof(AgencyDbContext))]
    [Migration("20221205111620_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Agency.Apartment", b =>
                {
                    b.Property<string>("KadastrNom")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Kadastr_nom");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("CountRooms")
                        .HasColumnType("int")
                        .HasColumnName("Count_rooms");

                    b.Property<string>("Furniture")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasDefaultValueSql("('нет')");

                    b.Property<double>("GeneralSpace")
                        .HasColumnType("float")
                        .HasColumnName("General_space");

                    b.Property<double>("LiveSpace")
                        .HasColumnType("float")
                        .HasColumnName("Live_space");

                    b.Property<string>("LoginOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_Owner");

                    b.Property<string>("Metro")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValueSql("('не рядом')");

                    b.Property<int>("NumFloor")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("TypeBuild")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Type_build");

                    b.Property<int>("YearBuild")
                        .HasColumnType("int")
                        .HasColumnName("Year_build");

                    b.HasKey("KadastrNom")
                        .HasName("PK__APARTMEN__D958E5500F677B68");

                    b.HasIndex("LoginOwner");

                    b.HasIndex(new[] { "Adress" }, "UQ__APARTMEN__08F62FE54ABDE498")
                        .IsUnique();

                    b.ToTable("APARTMENT", (string)null);
                });

            modelBuilder.Entity("Agency.Buyer", b =>
                {
                    b.Property<string>("LoginBuyer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_buyer");

                    b.Property<string>("FioBuyer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Fio_buyer");

                    b.Property<string>("NomTelBuyer")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("NomTel_buyer");

                    b.Property<string>("PassportNumBuyer")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Passport_Num_buyer");

                    b.Property<string>("PasswordBuyer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Password_buyer");

                    b.HasKey("LoginBuyer")
                        .HasName("PK__BUYER__481D8311A85EF61D");

                    b.HasIndex(new[] { "PassportNumBuyer" }, "UQ__BUYER__9FBDDF007FFA9AC3")
                        .IsUnique();

                    b.HasIndex(new[] { "NomTelBuyer" }, "UQ__BUYER__E5D8C86D9B22DB7F")
                        .IsUnique();

                    b.ToTable("BUYER", (string)null);
                });

            modelBuilder.Entity("Agency.Deal", b =>
                {
                    b.Property<int>("KodDeal")
                        .HasColumnType("int")
                        .HasColumnName("Kod_deal");

                    b.Property<DateTime>("DataDeal")
                        .HasColumnType("date")
                        .HasColumnName("Data_deal");

                    b.Property<string>("KadastrNom")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("Kadastr_nom");

                    b.Property<string>("LoginBuyer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_buyer");

                    b.Property<string>("LoginSpec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_Spec");

                    b.HasKey("KodDeal")
                        .HasName("PK__DEAL__895C7B22816BC87E");

                    b.HasIndex("KadastrNom");

                    b.HasIndex("LoginBuyer");

                    b.HasIndex("LoginSpec");

                    b.ToTable("DEAL", (string)null);
                });

            modelBuilder.Entity("Agency.Owner", b =>
                {
                    b.Property<string>("LoginOwner")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_Owner");

                    b.Property<string>("FioOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Fio_Owner");

                    b.Property<string>("NomTelOwner")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("NomTel_Owner");

                    b.Property<string>("PassportNumOwner")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Passport_Num_Owner");

                    b.Property<string>("PasswordOwner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Password_Owner");

                    b.HasKey("LoginOwner")
                        .HasName("PK__OWNER__A868A6CF66D4D7FD");

                    b.HasIndex(new[] { "PassportNumOwner" }, "UQ__OWNER__9E7EEF9536A88033")
                        .IsUnique();

                    b.HasIndex(new[] { "NomTelOwner" }, "UQ__OWNER__BD061FB3CC2053C9")
                        .IsUnique();

                    b.ToTable("OWNER", (string)null);
                });

            modelBuilder.Entity("Agency.Request", b =>
                {
                    b.Property<int>("IdReq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_req");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReq"));

                    b.Property<int>("CountRoomsReq")
                        .HasColumnType("int")
                        .HasColumnName("Count_rooms_req");

                    b.Property<DateTime>("DataReq")
                        .HasColumnType("date")
                        .HasColumnName("Data_req");

                    b.Property<int>("FloorReq")
                        .HasColumnType("int")
                        .HasColumnName("Floor_req");

                    b.Property<string>("FurnitureReq")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("Furniture_req")
                        .HasDefaultValueSql("('нет')");

                    b.Property<double>("GeneralSpaceReq")
                        .HasColumnType("float")
                        .HasColumnName("General_space_req");

                    b.Property<double>("LiveSpaceReq")
                        .HasColumnType("float")
                        .HasColumnName("Live_space_req");

                    b.Property<string>("LoginBuyer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_buyer");

                    b.Property<decimal>("MaxPriceReq")
                        .HasColumnType("money")
                        .HasColumnName("MaxPrice_req");

                    b.Property<string>("MetroReq")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("Metro_req")
                        .HasDefaultValueSql("('не рядом')");

                    b.Property<string>("TypePostrReq")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Type_postr_req");

                    b.Property<int>("YearPostrReq")
                        .HasColumnType("int")
                        .HasColumnName("Year_postr_req");

                    b.HasKey("IdReq")
                        .HasName("PK__REQUEST__182A6452793A75DC");

                    b.HasIndex("LoginBuyer");

                    b.ToTable("REQUEST", (string)null);
                });

            modelBuilder.Entity("Agency.Specialist", b =>
                {
                    b.Property<string>("LoginSpec")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login_Spec");

                    b.Property<int?>("CountDeals")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Count_deals")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FioSpec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Fio_Spec");

                    b.Property<string>("NomTelSpec")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("NomTel_Spec");

                    b.Property<string>("PasswordSpec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Password_Spec");

                    b.Property<int?>("SalarySpec")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Salary_Spec")
                        .HasComputedColumnSql("([Count_deals]*(5000)+(20000))", true);

                    b.HasKey("LoginSpec")
                        .HasName("PK__SPECIALI__48F116870FA86323");

                    b.HasIndex(new[] { "NomTelSpec" }, "UQ__SPECIALI__70DC04A8AA3238A2")
                        .IsUnique();

                    b.ToTable("SPECIALIST", (string)null);
                });

            modelBuilder.Entity("Agency.Apartment", b =>
                {
                    b.HasOne("Agency.Owner", "LoginOwnerNavigation")
                        .WithMany("Apartments")
                        .HasForeignKey("LoginOwner")
                        .IsRequired()
                        .HasConstraintName("FK_APARTMENT_OWNER");

                    b.Navigation("LoginOwnerNavigation");
                });

            modelBuilder.Entity("Agency.Deal", b =>
                {
                    b.HasOne("Agency.Apartment", "KadastrNomNavigation")
                        .WithMany("Deals")
                        .HasForeignKey("KadastrNom")
                        .HasConstraintName("FK_APARTMENT_DEAL");

                    b.HasOne("Agency.Buyer", "LoginBuyerNavigation")
                        .WithMany("Deals")
                        .HasForeignKey("LoginBuyer")
                        .IsRequired()
                        .HasConstraintName("FK_APARTMENT_BUYER");

                    b.HasOne("Agency.Specialist", "LoginSpecNavigation")
                        .WithMany("Deals")
                        .HasForeignKey("LoginSpec")
                        .IsRequired()
                        .HasConstraintName("FK_DEAL_SPECIALIST");

                    b.Navigation("KadastrNomNavigation");

                    b.Navigation("LoginBuyerNavigation");

                    b.Navigation("LoginSpecNavigation");
                });

            modelBuilder.Entity("Agency.Request", b =>
                {
                    b.HasOne("Agency.Buyer", "LoginBuyerNavigation")
                        .WithMany("Requests")
                        .HasForeignKey("LoginBuyer")
                        .IsRequired()
                        .HasConstraintName("FK_REQUEST_BUYER");

                    b.Navigation("LoginBuyerNavigation");
                });

            modelBuilder.Entity("Agency.Apartment", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("Agency.Buyer", b =>
                {
                    b.Navigation("Deals");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Agency.Owner", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("Agency.Specialist", b =>
                {
                    b.Navigation("Deals");
                });
#pragma warning restore 612, 618
        }
    }
}
